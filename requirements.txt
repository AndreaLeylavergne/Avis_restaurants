import logging
logging.root.handlers = []  # Jupyter messes up logging so needs a reset
logging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s', level=logging.INFO)
from smart_open import smart_open

import pandas as pd
import numpy as np
from numpy import random

import seaborn as sns
import matplotlib.pyplot as plt

import re

#import gensim
#import nltk

import sklearn
from sklearn.model_selection import train_test_split

from sklearn import linear_model
from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer
from sklearn.metrics import accuracy_score, confusion_matrix
import matplotlib.pyplot as plt
#from gensim.models import Word2Vec
#from sklearn.neighbors import KNeighborsClassifier
from sklearn import linear_model
#from nltk.corpus import stopwords

sns.set()

!pip install voila
!jupyter nbextension enable --py widgetsnbextension --sys-prefix
!jupyter nbextension enable --py voila --sys-prefix
!jupyter serverextension enable --py voila --sys-prefix

# Importer les librairies nécessaires
import numpy as np
import matplotlib.pyplot as plt
import os
import PIL
import PIL.Image
import PIL.ImageStat

import tensorflow as tf
from tensorflow import keras

from tensorflow.keras.utils import to_categorical
from tensorflow.keras import layers

# Importer les librairies nécessaires
import numpy as np
import matplotlib.pyplot as plt
import os
import PIL
import PIL.Image
import PIL.ImageStat

import tensorflow as tf
from tensorflow import keras
! pip install pathlib
import pathlib

import PIL
from PIL import Image

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline
import os
from os import listdir
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, auc, roc_auc_score, roc_curve
from glob import glob

import tensorflow as tf
from tensorflow.keras.models import Model, Sequential
from tensorflow.keras.layers import GlobalAveragePooling2D, GlobalAveragePooling1D, Flatten, Dense, Dropout
from tensorflow.keras.layers import Rescaling, RandomFlip, RandomRotation, RandomZoom
from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint
from tensorflow.keras.applications.vgg16 import VGG16
from tensorflow.keras.applications.vgg16 import preprocess_input
from tensorflow.keras.preprocessing.image import load_img, img_to_array
from tensorflow.keras.utils import to_categorical

import os
import pandas as pd
from sklearn import preprocessing
from sklearn.preprocessing import LabelEncoder
from glob import glob


import cv2

import cv2
import numpy as np
from sklearn.decomposition import PCA
from sklearn.cluster import KMeans
from sklearn.manifold import TSNE
import matplotlib.pyplot as plt

from sklearn import cluster, metrics
from tensorflow.keras.preprocessing.image import ImageDataGenerator

! pip install requests
! pip install yelpapi
import csv
from yelpapi import YelpAPI
import pprint

import logging
logging.root.handlers = []  # Jupyter messes up logging so needs a reset
logging.basicConfig(format='%(asctime)s : %(levelname)s : %(message)s', level=logging.INFO)
from smart_open import smart_open

import pandas as pd
import numpy as np
from numpy import random

import seaborn as sns
import matplotlib.pyplot as plt

import re

import gensim
import nltk

import sklearn
from sklearn.model_selection import train_test_split

from sklearn import linear_model
from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer
from sklearn.metrics import accuracy_score, confusion_matrix
import matplotlib.pyplot as plt
from gensim.models import Word2Vec
from sklearn.neighbors import KNeighborsClassifier
from sklearn import linear_model
from nltk.corpus import stopwords


import nltk
import string

from nltk.corpus import stopwords
from nltk.stem import WordNetLemmatizer

! pip install langdetect

import nltk
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
from nltk import FreqDist

import gensim
from gensim import corpora
from gensim.models import Phrases
from gensim.models.phrases import Phraser

nltk.download('punkt')

from nltk.util import bigrams, trigrams, ngrams
! pip install scipy

#import gensim, spacy, logging, warnings
import gensim.corpora as corpora
from gensim.utils import simple_preprocess
from gensim.models import CoherenceModel
from gensim.parsing.preprocessing import STOPWORDS
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings("ignore")

import sklearn
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.feature_extraction.text import TfidfVectorizer

import gensim.downloader as api
from gensim.models import TfidfModel
from gensim.corpora import Dictionary

from gensim import corpora
from gensim.models import LdaMulticore
from gensim import corpora, models

!pip install pyLDAvis

import pyLDAvis
import ipywidgets as widgets
from IPython.display import display
import pyLDAvis.gensim_models
from gensim.models import LdaMulticore
import pandas as pd

! pip install TextBlob
